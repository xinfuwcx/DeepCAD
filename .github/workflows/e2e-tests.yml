name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm' # Use pnpm for caching

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8 # Match the version in package.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        cd gateway
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node.js dependencies
      run: |
        cd frontend
        pnpm install --frozen-lockfile

    - name: Install Playwright Browsers
      run: |
        cd frontend
        npx playwright install --with-deps ${{ matrix.browser }}

    - name: Start Backend Server
      run: |
        cd gateway
        python start_backend.py &
        sleep 10
      env:
        ENVIRONMENT: test

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    - name: Start Frontend Server
      run: |
        cd frontend
        pnpm run preview &
        sleep 5

    - name: Wait for servers
      run: |
        npx wait-on http://localhost:4173 http://localhost:8000/api/health --timeout 60000

    - name: Run E2E tests
      run: |
        cd frontend
        npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-results-${{ matrix.browser }}
        path: |
          frontend/test-results/
          frontend/playwright-report/
        retention-days: 30

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: e2e-screenshots-${{ matrix.browser }}
        path: frontend/test-results/screenshots/
        retention-days: 7

  e2e-report:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Publish E2E Test Report
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./e2e-results-chromium/playwright-report
        destination_dir: e2e-report